<h2>Location Services and Mapping</h2>

<div class="section">
    <div class="page-title">Getting Started</div>
    <p>First, create a new iOS project in Xcode using the Single View App template. Name your project "LocationDemo" <br>and make sure the language is set to Swift.</p>
</div>

<div class="section">
    <div class="page-title">Adding MapKit Framework</div>
    <p>To work with maps, we need to add the MapKit framework to our project. In the "General" tab of your project <br>settings, scroll down to "Linked Frameworks and Libraries" and click the "+" button. Search for "MapKit" and add it <br> to your project.</p>
</div>

<div class="section">
    <div class="page-title">Importing MapKit and Adding a Map View</div>
    <p>Now that we have added the MapKit framework, we can use it in our app. In your ViewController.swift file, import <br> the MapKit module:</p>
    <div class="code">
        import MapKit
    </div>
    <p>Next, open the Main.storyboard file and add an <code>MKMapView</code> to your view controller. Set constraints to fill the entire <br> screen. Connect the map view to your ViewController.swift file by creating an <code>IBOutlet</code> named mapView:</p>
    <div class="code">
        @IBOutlet weak var mapView: MKMapView!
    </div>
</div>

<div class="section">
    <div class="page-title">Displaying User Location</div>
    <p>To display the user's location on the map, we need to request permission to access their location data. Open the <br> Info.plist file and add a new key called "Privacy - Location When In Use Usage Description" with a value describing <br> why your app needs access to the user's location.</p>
    <p>In the ViewController.swift file, import the CoreLocation module:</p>
    <div class="code">
        import CoreLocation
    </div>
    <p>Next, make your view controller conform to the <code>CLLocationManagerDelegate</code> protocol and create a <code>CLLocationManager</code> instance:</p>
    <div class="code">
        class ViewController: UIViewController, CLLocationManagerDelegate {<br>
        &nbsp;&nbsp;&nbsp;&nbsp;let locationManager = CLLocationManager()<br>
        }
    </div>
    <p>Now, request permission to access the user's location and set up the location manager in the <code>viewDidLoad</code> method:</p>
    <div class="code">
        override func viewDidLoad() {<br>
        &nbsp;&nbsp;&nbsp;&nbsp;super.viewDidLoad()<br><br>
        &nbsp;&nbsp;&nbsp;&nbsp;locationManager.delegate = self<br>
        &nbsp;&nbsp;&nbsp;&nbsp;locationManager.desiredAccuracy = kCLLocationAccuracyBest<br>
        &nbsp;&nbsp;&nbsp;&nbsp;locationManager.requestWhenInUseAuthorization()<br><br>
        &nbsp;&nbsp;&nbsp;&nbsp;locationManager.startUpdatingLocation()<br>
        }
    </div>
    <p>When you run the app, you should see the map view centered on your current location.</p>
</div>

  

<div class="section">
  <div class="title">Adding Annotations to the Map</div>
  <p>Annotating locations on the map is done using <code>MKPointAnnotation</code> objects. To add a custom annotation to the <br> map, first, create an <code>MKPointAnnotation</code> instance with the desired coordinate and title:</p>
  <div class="code">
      let annotation = MKPointAnnotation()<br>
      annotation.coordinate = CLLocationCoordinate2D(latitude: someLatitude, longitude: someLongitude)<br>
      annotation.title = "Some Title"
  </div>
  <p>Then, add the annotation to the <code>mapView</code>:</p>
  <div class="code">
      mapView.addAnnotation(annotation)
  </div>
</div>

<div class="section">
  <div class="title">Using Geolocation Services</div>
  <p>To convert an address to a coordinate, use the <code>CLGeocoder</code> class. For example, to find the coordinate for the Apple <br> Park campus:</p>
  <div class="code">
      let geocoder = CLGeocoder()<br>
      geocoder.geocodeAddressString("1 Apple Park Way, Cupertino, CA 95014") { (placemarks, error) in<br>
      &nbsp;&nbsp;&nbsp;&nbsp;if let error = error {<br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print("Error geocoding address: \(error.localizedDescription)")<br>
      &nbsp;&nbsp;&nbsp;&nbsp;} else if let placemarks = placemarks, let placemark = placemarks.first {<br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if let location = placemark.location {<br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;let annotation = MKPointAnnotation()<br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;annotation.coordinate = location.coordinate<br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;annotation.title = "Apple Park"<br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.mapView.addAnnotation(annotation)<br>
      &nbsp;&nbsp;&nbsp;&nbsp;}<br>
      }
  </div>
</div>
